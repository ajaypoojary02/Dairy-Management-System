/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dairy.management;

import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.FontSelector;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Desktop;
import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.temporal.ChronoUnit;
import java.util.Vector;
import javax.swing.table.TableModel;
import java.util.Date;
import java.util.Random;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ajay
 */
public class Dashboard extends javax.swing.JFrame {

    /**
     * Creates new form Dashboard
     */
    public Dashboard() {
        initComponents();
        seticon();
        vendor_update();
        item_no();
        menu_update();
        bill_menu_update();
        your_order();
        total_price();
        reort_table.setVisible(false);
        summary_pnl.setVisible(false);
        report_clear.setVisible(false);
    }

   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rb = new javax.swing.ButtonGroup();
        btn_pnl = new javax.swing.JPanel();
        vendors_btn = new javax.swing.JButton();
        menu_btn = new javax.swing.JButton();
        bill_btn = new javax.swing.JButton();
        logout_btn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        dash_pnl = new javax.swing.JPanel();
        vendors_pnl = new javax.swing.JPanel();
        lbl_id = new javax.swing.JLabel();
        lbl_name = new javax.swing.JLabel();
        addr_lbl = new javax.swing.JLabel();
        txt_id = new javax.swing.JTextField();
        txt_name = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_address = new javax.swing.JTextArea();
        lbl_contact = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_contact = new javax.swing.JTextField();
        txt_cattle = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        lbl_search = new javax.swing.JLabel();
        combo_search = new javax.swing.JComboBox<>();
        txt_search = new javax.swing.JTextField();
        btn_serach = new javax.swing.JButton();
        btn_showall = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane3 = new javax.swing.JScrollPane();
        vendors_table = new javax.swing.JTable();
        btn_add = new javax.swing.JButton();
        btn_clear = new javax.swing.JButton();
        btn_update = new javax.swing.JButton();
        btn_delete = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        vendor_title_lbl = new javax.swing.JLabel();
        menu_pnl = new javax.swing.JPanel();
        add_item_pnl = new javax.swing.JPanel();
        add_item_title_pnl = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        lbl_item_no = new javax.swing.JLabel();
        lbl_item_name = new javax.swing.JLabel();
        txt_item_no = new javax.swing.JTextField();
        txt_item_name = new javax.swing.JTextField();
        lbl_price = new javax.swing.JLabel();
        txt_price = new javax.swing.JTextField();
        btn_mn_save = new javax.swing.JButton();
        btn_mn_update = new javax.swing.JButton();
        btn_mn_clear = new javax.swing.JButton();
        btn_mn_delete = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        menu_table = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        combo_mn = new javax.swing.JComboBox<>();
        txt_mn_search = new javax.swing.JTextField();
        btn_mn_search = new javax.swing.JButton();
        btn_mn_showall = new javax.swing.JButton();
        bill_pnl = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        lbl_cust_name = new javax.swing.JLabel();
        txt_cust_name = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txt_cust_contact = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        bill_menu_table = new javax.swing.JTable();
        jPanel10 = new javax.swing.JPanel();
        lbl_bill_search = new javax.swing.JLabel();
        combo_bill = new javax.swing.JComboBox<>();
        txt_bii_search = new javax.swing.JTextField();
        btn_bill_search = new javax.swing.JButton();
        btn_bill_showall = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        lbl_bill_name = new javax.swing.JLabel();
        txt_bill_name = new javax.swing.JTextField();
        lbl_bill_rate = new javax.swing.JLabel();
        txt_bill_rate = new javax.swing.JTextField();
        lbl_bill_quantity = new javax.swing.JLabel();
        txt_bill_quantity = new javax.swing.JSpinner();
        btn_bill_additem = new javax.swing.JButton();
        btn_bill_rmitem = new javax.swing.JButton();
        btn_bill_updateqty = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        order_table = new javax.swing.JTable();
        lbl_total_price = new javax.swing.JLabel();
        txt_total_price = new javax.swing.JTextField();
        btn_bill = new javax.swing.JButton();
        btn_cancel_order = new javax.swing.JButton();
        report_pnl = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        reort_table = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        report_table = new javax.swing.JTable();
        lbl_gen = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        r_day = new javax.swing.JRadioButton();
        r_week = new javax.swing.JRadioButton();
        r_month = new javax.swing.JRadioButton();
        j_selectdate = new javax.swing.JRadioButton();
        lbl_date_from = new javax.swing.JLabel();
        lbl_date_to = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        date_from = new com.toedter.calendar.JDateChooser();
        date_to = new com.toedter.calendar.JDateChooser();
        gen_report = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        summary_pnl = new javax.swing.JPanel();
        txt_total_bill = new javax.swing.JLabel();
        txt_t_amt = new javax.swing.JLabel();
        txt_r_date = new javax.swing.JLabel();
        report_clear = new javax.swing.JButton();
        jPanel17 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        title_pnl = new javax.swing.JPanel();
        title_lbl = new javax.swing.JLabel();
        jPanel16 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Dairy Management System");
        setBackground(new java.awt.Color(255, 204, 0));

        btn_pnl.setBackground(new java.awt.Color(35, 78, 112));

        vendors_btn.setBackground(new java.awt.Color(255, 255, 255));
        vendors_btn.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        vendors_btn.setText("VENDORS");
        vendors_btn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        vendors_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vendors_btnActionPerformed(evt);
            }
        });

        menu_btn.setBackground(new java.awt.Color(255, 255, 255));
        menu_btn.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        menu_btn.setText("MENU");
        menu_btn.setToolTipText("");
        menu_btn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        menu_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_btnActionPerformed(evt);
            }
        });

        bill_btn.setBackground(new java.awt.Color(255, 255, 255));
        bill_btn.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        bill_btn.setText("BILL");
        bill_btn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bill_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bill_btnActionPerformed(evt);
            }
        });

        logout_btn.setBackground(new java.awt.Color(255, 255, 255));
        logout_btn.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        logout_btn.setText("Logout");
        logout_btn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logout_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logout_btnActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        jButton1.setText("REPORT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout btn_pnlLayout = new javax.swing.GroupLayout(btn_pnl);
        btn_pnl.setLayout(btn_pnlLayout);
        btn_pnlLayout.setHorizontalGroup(
            btn_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menu_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(vendors_btn, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
            .addComponent(bill_btn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(logout_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        btn_pnlLayout.setVerticalGroup(
            btn_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btn_pnlLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(vendors_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(menu_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(bill_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(logout_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(81, Short.MAX_VALUE))
        );

        dash_pnl.setBackground(new java.awt.Color(255, 255, 255));
        dash_pnl.setPreferredSize(new java.awt.Dimension(1365, 680));
        dash_pnl.setLayout(new java.awt.CardLayout());

        vendors_pnl.setBackground(new java.awt.Color(233, 239, 255));
        vendors_pnl.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        vendors_pnl.setInheritsPopupMenu(true);

        lbl_id.setFont(new java.awt.Font("Times New Roman", 0, 25)); // NOI18N
        lbl_id.setText("ID :");
        lbl_id.setName(""); // NOI18N

        lbl_name.setFont(new java.awt.Font("Times New Roman", 0, 25)); // NOI18N
        lbl_name.setText("Name :");

        addr_lbl.setFont(new java.awt.Font("Times New Roman", 0, 25)); // NOI18N
        addr_lbl.setText("Address :");

        txt_id.setToolTipText("Enter ID");
        txt_id.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        txt_name.setToolTipText("Enter full name");

        jScrollPane1.setForeground(new java.awt.Color(153, 153, 153));
        jScrollPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        txt_address.setColumns(20);
        txt_address.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        txt_address.setRows(5);
        txt_address.setToolTipText("Enter Address");
        jScrollPane1.setViewportView(txt_address);

        lbl_contact.setFont(new java.awt.Font("Times New Roman", 0, 25)); // NOI18N
        lbl_contact.setText("Contact :");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 25)); // NOI18N
        jLabel2.setText("Cattle :");

        txt_contact.setToolTipText("Enter Contact number");

        txt_cattle.setFont(new java.awt.Font("Times New Roman", 0, 25)); // NOI18N
        txt_cattle.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cow", "Buffalo" }));
        txt_cattle.setToolTipText("Select Cattle");
        txt_cattle.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel3.setBackground(new java.awt.Color(233, 239, 255));

        jPanel4.setBackground(new java.awt.Color(208, 220, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lbl_search.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_search.setText("Serach By ");

        combo_search.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        combo_search.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", "Name", "Contact" }));
        combo_search.setToolTipText("");

        txt_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_searchActionPerformed(evt);
            }
        });

        btn_serach.setBackground(java.awt.Color.white);
        btn_serach.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn_serach.setText("Search");
        btn_serach.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_serach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_serachActionPerformed(evt);
            }
        });

        btn_showall.setBackground(new java.awt.Color(255, 255, 255));
        btn_showall.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn_showall.setText("Show All");
        btn_showall.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_showall.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_showallMouseClicked(evt);
            }
        });
        btn_showall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_showallActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lbl_search, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(combo_search, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_serach, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(btn_showall)
                .addContainerGap(421, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lbl_search, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(combo_search)
                            .addComponent(txt_search)
                            .addComponent(btn_serach, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_showall))
                        .addGap(5, 5, 5)))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        vendors_table.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        vendors_table.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        vendors_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Contact", "Cattle", "Address"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        vendors_table.getTableHeader().setReorderingAllowed(false);
        vendors_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                vendors_tableMouseClicked(evt);
            }
        });
        vendors_table.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                vendors_tableKeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(vendors_table);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 1093, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        btn_add.setBackground(new java.awt.Color(255, 255, 255));
        btn_add.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btn_add.setText("Add");
        btn_add.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });

        btn_clear.setBackground(new java.awt.Color(255, 255, 255));
        btn_clear.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btn_clear.setText("Clear");
        btn_clear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clearActionPerformed(evt);
            }
        });

        btn_update.setBackground(new java.awt.Color(255, 255, 255));
        btn_update.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btn_update.setText("Update");
        btn_update.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });

        btn_delete.setBackground(new java.awt.Color(255, 255, 255));
        btn_delete.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btn_delete.setText("Delete");
        btn_delete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });

        jPanel15.setBackground(new java.awt.Color(255, 168, 113));
        jPanel15.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        vendor_title_lbl.setBackground(new java.awt.Color(255, 168, 113));
        vendor_title_lbl.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        vendor_title_lbl.setText("                                                 Vendors Info");
        vendor_title_lbl.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        vendor_title_lbl.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        vendor_title_lbl.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel15Layout.createSequentialGroup()
                    .addComponent(vendor_title_lbl, javax.swing.GroupLayout.DEFAULT_SIZE, 1085, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 54, Short.MAX_VALUE)
            .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(vendor_title_lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout vendors_pnlLayout = new javax.swing.GroupLayout(vendors_pnl);
        vendors_pnl.setLayout(vendors_pnlLayout);
        vendors_pnlLayout.setHorizontalGroup(
            vendors_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vendors_pnlLayout.createSequentialGroup()
                .addGroup(vendors_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, vendors_pnlLayout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addGroup(vendors_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(vendors_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(vendors_pnlLayout.createSequentialGroup()
                                    .addGroup(vendors_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(vendors_pnlLayout.createSequentialGroup()
                                            .addComponent(lbl_id, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(vendors_pnlLayout.createSequentialGroup()
                                            .addComponent(lbl_name, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txt_name)))
                                    .addGap(90, 90, 90)
                                    .addGroup(vendors_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(lbl_contact, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(vendors_pnlLayout.createSequentialGroup()
                                    .addComponent(addr_lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(vendors_pnlLayout.createSequentialGroup()
                                .addComponent(btn_add, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(100, 100, 100)
                                .addComponent(btn_clear, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(100, 100, 100)
                                .addComponent(btn_update, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(vendors_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(vendors_pnlLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(vendors_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_contact)
                                    .addComponent(txt_cattle, 0, 200, Short.MAX_VALUE)))
                            .addGroup(vendors_pnlLayout.createSequentialGroup()
                                .addGap(100, 100, 100)
                                .addComponent(btn_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        vendors_pnlLayout.setVerticalGroup(
            vendors_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vendors_pnlLayout.createSequentialGroup()
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(vendors_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_contact)
                    .addComponent(lbl_contact, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txt_id, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(lbl_id, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addGroup(vendors_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_cattle)
                    .addComponent(txt_name)
                    .addComponent(lbl_name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addGroup(vendors_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addr_lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(vendors_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_add, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_clear, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_update, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        dash_pnl.add(vendors_pnl, "card2");

        menu_pnl.setBackground(new java.awt.Color(233, 239, 255));
        menu_pnl.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        add_item_pnl.setBackground(new java.awt.Color(233, 239, 255));
        add_item_pnl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        add_item_title_pnl.setBackground(new java.awt.Color(202, 202, 255));

        jLabel3.setBackground(new java.awt.Color(204, 255, 255));
        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(114, 38, 32));
        jLabel3.setText("                         Add Items");
        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout add_item_title_pnlLayout = new javax.swing.GroupLayout(add_item_title_pnl);
        add_item_title_pnl.setLayout(add_item_title_pnlLayout);
        add_item_title_pnlLayout.setHorizontalGroup(
            add_item_title_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        add_item_title_pnlLayout.setVerticalGroup(
            add_item_title_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        lbl_item_no.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_item_no.setText("      Item No ");

        lbl_item_name.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_item_name.setText("    Item Name");

        txt_item_no.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txt_item_no.setEnabled(false);

        txt_item_name.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lbl_price.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_price.setText("        Price");

        txt_price.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        btn_mn_save.setBackground(java.awt.Color.white);
        btn_mn_save.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        btn_mn_save.setText("Save");
        btn_mn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_mn_saveActionPerformed(evt);
            }
        });

        btn_mn_update.setBackground(java.awt.Color.white);
        btn_mn_update.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        btn_mn_update.setText("Update");
        btn_mn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_mn_updateActionPerformed(evt);
            }
        });

        btn_mn_clear.setBackground(java.awt.Color.white);
        btn_mn_clear.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        btn_mn_clear.setText("Clear");
        btn_mn_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_mn_clearActionPerformed(evt);
            }
        });

        btn_mn_delete.setBackground(java.awt.Color.white);
        btn_mn_delete.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        btn_mn_delete.setText("Delete");
        btn_mn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_mn_deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout add_item_pnlLayout = new javax.swing.GroupLayout(add_item_pnl);
        add_item_pnl.setLayout(add_item_pnlLayout);
        add_item_pnlLayout.setHorizontalGroup(
            add_item_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(add_item_title_pnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(add_item_pnlLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(add_item_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_mn_clear, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(add_item_pnlLayout.createSequentialGroup()
                        .addGroup(add_item_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lbl_price, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbl_item_name, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                            .addComponent(lbl_item_no, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_mn_save, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(add_item_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(add_item_pnlLayout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(add_item_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_item_no)
                                    .addComponent(txt_item_name)
                                    .addComponent(txt_price, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)))
                            .addGroup(add_item_pnlLayout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addGroup(add_item_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btn_mn_delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btn_mn_update, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        add_item_pnlLayout.setVerticalGroup(
            add_item_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(add_item_pnlLayout.createSequentialGroup()
                .addComponent(add_item_title_pnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addGroup(add_item_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_item_no, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(lbl_item_no, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addGroup(add_item_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbl_item_name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txt_item_name, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addGroup(add_item_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbl_price, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txt_price, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                .addGap(67, 67, 67)
                .addGroup(add_item_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_mn_update, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_mn_save, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(add_item_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_mn_clear, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(btn_mn_delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(255, 168, 113));

        jLabel1.setBackground(new java.awt.Color(255, 168, 113));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setText("                                                          Menu");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1085, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        menu_table.setAutoCreateRowSorter(true);
        menu_table.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        menu_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item No", "Item Name", "Price"
            }
        ));
        menu_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menu_tableMouseClicked(evt);
            }
        });
        menu_table.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                menu_tableKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(menu_table);
        if (menu_table.getColumnModel().getColumnCount() > 0) {
            menu_table.getColumnModel().getColumn(0).setResizable(false);
            menu_table.getColumnModel().getColumn(1).setResizable(false);
        }

        jPanel1.setBackground(new java.awt.Color(202, 202, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel4.setText("Search By :");

        combo_mn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        combo_mn.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item No", "Item Name", "Price" }));

        btn_mn_search.setBackground(new java.awt.Color(255, 255, 255));
        btn_mn_search.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btn_mn_search.setText("Search");
        btn_mn_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_mn_searchActionPerformed(evt);
            }
        });

        btn_mn_showall.setBackground(new java.awt.Color(255, 255, 255));
        btn_mn_showall.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btn_mn_showall.setText("Show All");
        btn_mn_showall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_mn_showallActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(combo_mn, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txt_mn_search, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_mn_search, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_mn_showall, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(combo_mn, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(txt_mn_search, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(btn_mn_search, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
            .addComponent(btn_mn_showall, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout menu_pnlLayout = new javax.swing.GroupLayout(menu_pnl);
        menu_pnl.setLayout(menu_pnlLayout);
        menu_pnlLayout.setHorizontalGroup(
            menu_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menu_pnlLayout.createSequentialGroup()
                .addGroup(menu_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(menu_pnlLayout.createSequentialGroup()
                        .addComponent(add_item_pnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(menu_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(menu_pnlLayout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(234, 234, 234))
        );
        menu_pnlLayout.setVerticalGroup(
            menu_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menu_pnlLayout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(menu_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(add_item_pnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(menu_pnlLayout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 541, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        dash_pnl.add(menu_pnl, "card3");

        bill_pnl.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        jPanel5.setBackground(new java.awt.Color(255, 168, 113));

        jLabel5.setBackground(new java.awt.Color(255, 168, 113));
        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel5.setText("                                         Bill Generation ");
        jLabel5.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jPanel7.setBackground(new java.awt.Color(202, 202, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel7.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel6.setText(" Customers Details");

        lbl_cust_name.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lbl_cust_name.setText("  Name");

        txt_cust_name.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel7.setText("Contact");

        txt_cust_contact.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(lbl_cust_name, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_cust_name, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_cust_contact, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_cust_name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txt_cust_name, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(txt_cust_contact)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        bill_menu_table.setAutoCreateRowSorter(true);
        bill_menu_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item No", "Item Name", "Price"
            }
        ));
        bill_menu_table.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                bill_menu_tableFocusGained(evt);
            }
        });
        bill_menu_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bill_menu_tableMouseClicked(evt);
            }
        });
        bill_menu_table.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                bill_menu_tableKeyPressed(evt);
            }
        });
        jScrollPane4.setViewportView(bill_menu_table);
        if (bill_menu_table.getColumnModel().getColumnCount() > 0) {
            bill_menu_table.getColumnModel().getColumn(0).setResizable(false);
            bill_menu_table.getColumnModel().getColumn(1).setResizable(false);
            bill_menu_table.getColumnModel().getColumn(2).setResizable(false);
        }

        jPanel10.setBackground(new java.awt.Color(233, 239, 255));
        jPanel10.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        lbl_bill_search.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lbl_bill_search.setText("Search By");

        combo_bill.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        combo_bill.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item No", "Item Name", "Price" }));

        txt_bii_search.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        btn_bill_search.setBackground(java.awt.Color.white);
        btn_bill_search.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_bill_search.setText("Search");
        btn_bill_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_bill_searchActionPerformed(evt);
            }
        });

        btn_bill_showall.setBackground(java.awt.Color.white);
        btn_bill_showall.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_bill_showall.setText("Show All");
        btn_bill_showall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_bill_showallActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(lbl_bill_search, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(combo_bill, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_bii_search, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_bill_search, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_bill_showall, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbl_bill_search, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(combo_bill)
            .addComponent(txt_bii_search)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(btn_bill_showall, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(btn_bill_search, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel9.setBackground(new java.awt.Color(202, 202, 255));

        jLabel8.setBackground(new java.awt.Color(202, 202, 255));
        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel8.setText("                                   Menu");
        jLabel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel11.setText("                                      Item");
        jLabel11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 572, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 505, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel11.setBackground(new java.awt.Color(233, 239, 255));
        jPanel11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lbl_bill_name.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lbl_bill_name.setText("Name");

        txt_bill_name.setEditable(false);
        txt_bill_name.setBackground(new java.awt.Color(204, 204, 204));
        txt_bill_name.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        lbl_bill_rate.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lbl_bill_rate.setText("Rate");

        txt_bill_rate.setEditable(false);
        txt_bill_rate.setBackground(new java.awt.Color(204, 204, 204));
        txt_bill_rate.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        lbl_bill_quantity.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lbl_bill_quantity.setText("Quantity");

        txt_bill_quantity.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txt_bill_quantity.setName(""); // NOI18N
        txt_bill_quantity.setValue(1);

        btn_bill_additem.setBackground(new java.awt.Color(255, 255, 255));
        btn_bill_additem.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_bill_additem.setText("Add Item");
        btn_bill_additem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_bill_additemActionPerformed(evt);
            }
        });

        btn_bill_rmitem.setBackground(new java.awt.Color(255, 255, 255));
        btn_bill_rmitem.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_bill_rmitem.setText("Remove Item");
        btn_bill_rmitem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_bill_rmitemActionPerformed(evt);
            }
        });

        btn_bill_updateqty.setBackground(new java.awt.Color(255, 255, 255));
        btn_bill_updateqty.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_bill_updateqty.setText("Update Quantity");
        btn_bill_updateqty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_bill_updateqtyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(lbl_bill_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_bill_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(lbl_bill_name, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_bill_name, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(lbl_bill_rate, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txt_bill_rate, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(btn_bill_additem)
                        .addGap(35, 35, 35)
                        .addComponent(btn_bill_rmitem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_bill_updateqty)
                        .addGap(32, 32, 32))))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_bill_name, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbl_bill_rate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_bill_rate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lbl_bill_name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_bill_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_bill_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(btn_bill_rmitem, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_bill_additem, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_bill_updateqty, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel12.setBackground(new java.awt.Color(202, 202, 255));

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel14.setText("                                            Your Order");
        jLabel14.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
        );

        jPanel13.setBackground(new java.awt.Color(233, 239, 255));
        jPanel13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jScrollPane5.setAutoscrolls(true);

        order_table.setAutoCreateRowSorter(true);
        order_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Name", "Rate", "Quantity", "Price"
            }
        ));
        order_table.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        order_table.setGridColor(new java.awt.Color(255, 255, 255));
        order_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                order_tableMouseClicked(evt);
            }
        });
        order_table.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                order_tableKeyPressed(evt);
            }
        });
        jScrollPane5.setViewportView(order_table);
        if (order_table.getColumnModel().getColumnCount() > 0) {
            order_table.getColumnModel().getColumn(0).setResizable(false);
            order_table.getColumnModel().getColumn(1).setResizable(false);
            order_table.getColumnModel().getColumn(2).setResizable(false);
            order_table.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1))
        );

        lbl_total_price.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lbl_total_price.setText("Total Price");

        txt_total_price.setEditable(false);
        txt_total_price.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        btn_bill.setBackground(java.awt.Color.white);
        btn_bill.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btn_bill.setText("Bill");
        btn_bill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_billActionPerformed(evt);
            }
        });

        btn_cancel_order.setBackground(java.awt.Color.white);
        btn_cancel_order.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btn_cancel_order.setText("Cancel Order");
        btn_cancel_order.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancel_orderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bill_pnlLayout = new javax.swing.GroupLayout(bill_pnl);
        bill_pnl.setLayout(bill_pnlLayout);
        bill_pnlLayout.setHorizontalGroup(
            bill_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bill_pnlLayout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(bill_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(bill_pnlLayout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(bill_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(bill_pnlLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbl_total_price, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_total_price, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_bill, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_cancel_order, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(bill_pnlLayout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        bill_pnlLayout.setVerticalGroup(
            bill_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bill_pnlLayout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(bill_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bill_pnlLayout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(bill_pnlLayout.createSequentialGroup()
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addGroup(bill_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_total_price, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_total_price)
                            .addComponent(btn_bill, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_cancel_order))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        dash_pnl.add(bill_pnl, "card4");

        report_pnl.setBackground(new java.awt.Color(233, 239, 255));

        jPanel2.setBackground(new java.awt.Color(255, 168, 113));

        jLabel9.setBackground(new java.awt.Color(255, 168, 113));
        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel9.setText("                                               Report");
        jLabel9.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 1093, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        jPanel14.setBackground(new java.awt.Color(233, 239, 255));
        jPanel14.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jPanel14.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N

        reort_table.setBackground(new java.awt.Color(233, 239, 255));

        report_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Bill No", "Customer Name", "Conatct Number", "Total Amount", "Date"
            }
        ));
        jScrollPane6.setViewportView(report_table);
        if (report_table.getColumnModel().getColumnCount() > 0) {
            report_table.getColumnModel().getColumn(0).setResizable(false);
            report_table.getColumnModel().getColumn(1).setResizable(false);
            report_table.getColumnModel().getColumn(2).setResizable(false);
            report_table.getColumnModel().getColumn(3).setResizable(false);
            report_table.getColumnModel().getColumn(4).setResizable(false);
        }

        lbl_gen.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N

        javax.swing.GroupLayout reort_tableLayout = new javax.swing.GroupLayout(reort_table);
        reort_table.setLayout(reort_tableLayout);
        reort_tableLayout.setHorizontalGroup(
            reort_tableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reort_tableLayout.createSequentialGroup()
                .addGroup(reort_tableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 581, Short.MAX_VALUE)
                    .addComponent(lbl_gen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        reort_tableLayout.setVerticalGroup(
            reort_tableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reort_tableLayout.createSequentialGroup()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(lbl_gen, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel12.setText("Select Report Type");

        r_day.setBackground(new java.awt.Color(255, 255, 255));
        rb.add(r_day);
        r_day.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        r_day.setSelected(true);
        r_day.setText("Day");
        r_day.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                r_dayFocusGained(evt);
            }
        });

        r_week.setBackground(new java.awt.Color(255, 255, 255));
        rb.add(r_week);
        r_week.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        r_week.setText("Week");

        r_month.setBackground(new java.awt.Color(255, 255, 255));
        rb.add(r_month);
        r_month.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        r_month.setText("Month");

        j_selectdate.setBackground(new java.awt.Color(255, 255, 255));
        rb.add(j_selectdate);
        j_selectdate.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        j_selectdate.setText("Select Date :");

        lbl_date_from.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        lbl_date_from.setText("From");

        lbl_date_to.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        lbl_date_to.setText("To");

        jPanel18.setBackground(new java.awt.Color(233, 239, 255));

        date_from.setDateFormatString("yyyy/MM/dd");

        date_to.setDateFormatString("yyyy/MM/dd");

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(date_from, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
            .addComponent(date_to, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addComponent(date_from, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(date_to, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        gen_report.setBackground(new java.awt.Color(255, 255, 255));
        gen_report.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        gen_report.setText("Generate Report");
        gen_report.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gen_reportActionPerformed(evt);
            }
        });

        summary_pnl.setBackground(new java.awt.Color(233, 239, 255));

        txt_total_bill.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N

        txt_t_amt.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N

        txt_r_date.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N

        report_clear.setBackground(new java.awt.Color(255, 255, 255));
        report_clear.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        report_clear.setText("Clear");
        report_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                report_clearActionPerformed(evt);
            }
        });

        jPanel17.setBackground(new java.awt.Color(202, 202, 255));

        jLabel18.setBackground(new java.awt.Color(202, 202, 255));
        jLabel18.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        jLabel18.setText("Summary");
        jLabel18.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 493, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 39, Short.MAX_VALUE)
            .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE))
        );

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jButton3.setText("Print");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout summary_pnlLayout = new javax.swing.GroupLayout(summary_pnl);
        summary_pnl.setLayout(summary_pnlLayout);
        summary_pnlLayout.setHorizontalGroup(
            summary_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(summary_pnlLayout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(report_clear, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(109, Short.MAX_VALUE))
            .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(summary_pnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(summary_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_total_bill, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txt_r_date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txt_t_amt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        summary_pnlLayout.setVerticalGroup(
            summary_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(summary_pnlLayout.createSequentialGroup()
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(txt_total_bill, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(txt_t_amt, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(txt_r_date, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(summary_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(report_clear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(summary_pnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 1, Short.MAX_VALUE))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel14Layout.createSequentialGroup()
                                        .addComponent(r_day, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(r_week, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(r_month, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel14Layout.createSequentialGroup()
                                        .addComponent(j_selectdate)
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lbl_date_to, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lbl_date_from, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addComponent(gen_report, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(reort_table, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(reort_table, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(r_day)
                            .addComponent(r_week)
                            .addComponent(r_month))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(j_selectdate)
                                    .addComponent(lbl_date_from, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addComponent(lbl_date_to))
                            .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addComponent(gen_report, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(summary_pnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(85, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout report_pnlLayout = new javax.swing.GroupLayout(report_pnl);
        report_pnl.setLayout(report_pnlLayout);
        report_pnlLayout.setHorizontalGroup(
            report_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(report_pnlLayout.createSequentialGroup()
                .addGroup(report_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        report_pnlLayout.setVerticalGroup(
            report_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(report_pnlLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        dash_pnl.add(report_pnl, "card5");
        report_pnl.getAccessibleContext().setAccessibleParent(dash_pnl);

        title_pnl.setBackground(new java.awt.Color(35, 78, 112));

        title_lbl.setBackground(new java.awt.Color(0, 51, 51));
        title_lbl.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        title_lbl.setForeground(new java.awt.Color(255, 255, 153));
        title_lbl.setText("                               GOKUL DAIRY");
        title_lbl.setToolTipText("");
        title_lbl.setAlignmentY(0.0F);

        javax.swing.GroupLayout title_pnlLayout = new javax.swing.GroupLayout(title_pnl);
        title_pnl.setLayout(title_pnlLayout);
        title_pnlLayout.setHorizontalGroup(
            title_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(title_pnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title_lbl, javax.swing.GroupLayout.DEFAULT_SIZE, 1064, Short.MAX_VALUE)
                .addGap(18, 18, 18))
        );
        title_pnlLayout.setVerticalGroup(
            title_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(title_pnlLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(title_lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel16.setBackground(new java.awt.Color(255, 255, 255));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/logo_1.jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_pnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(title_pnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dash_pnl, javax.swing.GroupLayout.PREFERRED_SIZE, 1090, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2501, 2501, 2501))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(title_pnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(dash_pnl, javax.swing.GroupLayout.PREFERRED_SIZE, 628, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btn_pnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        setSize(new java.awt.Dimension(1290, 684));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void vendors_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vendors_btnActionPerformed
        vendors_pnl.setVisible(true);
        menu_pnl.setVisible(false);
        bill_pnl.setVisible(false);
        report_pnl.setVisible(false);
        
    }//GEN-LAST:event_vendors_btnActionPerformed

    private void menu_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_btnActionPerformed
        vendors_pnl.setVisible(false);
        menu_pnl.setVisible(true);
        bill_pnl.setVisible(false);
        report_pnl.setVisible(false);
    }//GEN-LAST:event_menu_btnActionPerformed

    private void logout_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logout_btnActionPerformed
        int a=JOptionPane.showConfirmDialog(null,"Do you really want to Logout","Select",JOptionPane.YES_NO_OPTION);
        if (a==0)
        {
        login lg=new login();
        lg.setVisible(true);
        setVisible(false);
        }
    }//GEN-LAST:event_logout_btnActionPerformed

    private void txt_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_searchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_searchActionPerformed

    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
        String id=txt_id.getText();
        String name=txt_name.getText();
        String contact=txt_contact.getText();
        String cattle;
        cattle=txt_cattle.getSelectedItem().toString();
        String address=txt_address.getText();
        String regex_contact = "[7-9][0-9]{9}";
        String req= "^[a-zA-Z]*$";
        if("".equals(id) || name.isEmpty() || contact.equals("") || address.isEmpty()  )
        {
            JOptionPane.showMessageDialog(null, "All fields are required");
        }  
        else if (!name.matches(req))
        {
            JOptionPane.showMessageDialog(this,"Invalid Name");
        }
        else if (!contact.matches(regex_contact))
        {
             JOptionPane.showMessageDialog(null, "Eneter valid contact number");
        }
        else
        {
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/dms","DMS","Dairy@123");
                Statement st=con.createStatement();
                String sql="Select * from vendors where ID='"+id+"'";
                ResultSet rs=st.executeQuery(sql);
                if(rs.next())
                {
                    JOptionPane.showMessageDialog(this,"ID already exists");
                }
                else
                {
                String str="INSERT INTO vendors VALUES (?,?,?,?,?)";
                PreparedStatement pst=con.prepareStatement(str);
                pst.setInt(1,Integer.parseInt(txt_id.getText()));
                pst.setString(2,txt_name.getText());
                pst.setString(3,contact);
                
                pst.setString(4, cattle);
                pst.setString(5,txt_address.getText());
                pst.execute();
                JOptionPane.showMessageDialog(null, "Data Inserted");
                con.close();
                vendor_update();
                clear();
            }
            }
            catch(HeadlessException | ClassNotFoundException | SQLException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }
        
    }//GEN-LAST:event_btn_addActionPerformed

    private void btn_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clearActionPerformed
        txt_id.setText("");
        txt_name.setText("");
        txt_contact.setText("");
        txt_cattle.setSelectedIndex(0);
        txt_address.setText("");
        
    }//GEN-LAST:event_btn_clearActionPerformed

    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed
        String id=txt_id.getText();
        String name=txt_name.getText();
        String contact=txt_contact.getText();
        String cattle;
        cattle=txt_cattle.getSelectedItem().toString();
        String address=txt_address.getText();
        String regex_contact = "[7-9][0-9]{9}";
        if("".equals(id) | "".equals(name) | "".equals(address))
        {
            JOptionPane.showMessageDialog(null, "All fields are required");
        }
        else if (!contact.matches(regex_contact))
        {
             JOptionPane.showMessageDialog(null, "Eneter valid contact number");
        }
        else
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/dms","DMS","Dairy@123");
                String str="update vendors set Name=?, Contact=?, Cattle=?, Address=? where ID=?";
                PreparedStatement pst=con.prepareStatement(str);
                pst.setString(1,txt_name.getText());
                pst.setString(2,txt_contact.getText());
                pst.setString(3,cattle);  
                pst.setString(4,txt_address.getText());
                pst.setInt(5,Integer.parseInt(txt_id.getText()));
                pst.execute();
                vendor_update();
                clear();
                JOptionPane.showMessageDialog(null, "Record Update");
                con.close();
        
            }
            catch(HeadlessException | ClassNotFoundException | SQLException e){
                JOptionPane.showMessageDialog(null,e);
            }
    }//GEN-LAST:event_btn_updateActionPerformed

    private void vendors_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vendors_tableMouseClicked
        int i=vendors_table.getSelectedRow();
        TableModel model= vendors_table.getModel();
        txt_id.setText(model.getValueAt(i,0).toString());
        txt_name.setText(model.getValueAt(i,1).toString());
        txt_contact.setText(model.getValueAt(i,2).toString());
        txt_cattle.setSelectedItem(model.getValueAt(i,3));
        txt_address.setText(model.getValueAt(i,4).toString());
    }//GEN-LAST:event_vendors_tableMouseClicked

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        if(txt_id.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null,"Select Data to delete");
        }
        else
        {
        try{
            int ds=JOptionPane.showConfirmDialog(null,"DO YOU WANTTO DELETE THE RECORD?","WARNING",JOptionPane.YES_NO_OPTION);
            if(ds == JOptionPane.YES_OPTION){
                
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/dms","DMS","Dairy@123");
            String stq="delete from vendors where ID=?";
            PreparedStatement pstr=conn.prepareStatement(stq);
            pstr.setString(1,txt_id.getText());
            pstr.executeUpdate();
            JOptionPane.showMessageDialog(null,"RECORD DELETED");
            clear(); 
            conn.close(); 
            vendor_update();
            }
        }
        
        catch(HeadlessException | ClassNotFoundException | NumberFormatException | SQLException e){
            
            JOptionPane.showMessageDialog(null,e);
        }
        }
    }//GEN-LAST:event_btn_deleteActionPerformed

    private void btn_showallMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_showallMouseClicked
        vendor_update();
    }//GEN-LAST:event_btn_showallMouseClicked

    private void btn_serachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_serachActionPerformed
        try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/dms","DMS","Dairy@123");
                String s=combo_search.getSelectedItem().toString();
                String sb=txt_search.getText();
                if (s.equals("ID"))
                {
                    if(sb.equals(""))
                    {
                        JOptionPane.showMessageDialog(null,"Select Something to search");
                    }
                    else
                    {
                String str="select * from vendors where ID=?";
                PreparedStatement pst=con.prepareStatement(str);
                pst.setString(1,txt_search.getText());     
                ResultSet rs=pst.executeQuery();
                if(!rs.next())
                {
                    JOptionPane.showMessageDialog(this,"Data not found");
                }
                else
                {
                String sql="Select * from vendors where ID='"+sb+"'";
                Statement st=con.createStatement();
                ResultSet rs1=st.executeQuery(sql);
                ResultSetMetaData rss=rs1.getMetaData();
                int c=rss.getColumnCount();
                DefaultTableModel dt=(DefaultTableModel)vendors_table.getModel();
                dt.setRowCount(0);
                while(rs1.next())
                {
                    Vector v=new Vector();
                    
                    for(int a=1;a<=c;a++)
                    {
                        v.add(rs.getString("ID"));
                        v.add(rs.getString("Name"));
                        v.add(rs.getString("Contact"));
                        v.add(rs.getString("Cattle"));
                        v.add(rs.getString("Address"));
                    }
                    dt.addRow(v);
                    
                }
               con.close();
                        }
                    }
                }
                else if(s.equals("Name"))
                {
                     if(sb.equals(""))
                    {
                        JOptionPane.showMessageDialog(null,"Select Something to search");
                    }
                    else
                    {
                   String str="select * from vendors where Name=?";
                PreparedStatement pst=con.prepareStatement(str);              
                pst.setString(1,txt_search.getText());     
                ResultSet rs=pst.executeQuery();
                ResultSetMetaData rss=rs.getMetaData();
            
                int c=rss.getColumnCount();
                DefaultTableModel dt=(DefaultTableModel)vendors_table.getModel();
                dt.setRowCount(0);
                while(rs.next())
                {
                    Vector v=new Vector();
                    
                    for(int a=1;a<=c;a++)
                    {
                        v.add(rs.getString("ID"));
                        v.add(rs.getString("Name"));
                        v.add(rs.getString("Contact"));
                        v.add(rs.getString("Cattle"));
                        v.add(rs.getString("Address"));
                    }
                    dt.addRow(v);
                    
                }
               con.close();
                } 
            }
                
            else
                {
                     if(sb.equals(""))
                    {
                        JOptionPane.showMessageDialog(null,"Select Something to search");
                    }
                    else
                    {
                    String str="select * from vendors where Contact=?";
                    PreparedStatement pst=con.prepareStatement(str);
                
                    pst.setString(1,txt_search.getText());     
                    ResultSet rs=pst.executeQuery();
                    ResultSetMetaData rss=rs.getMetaData();
                    int c=rss.getColumnCount();
                    DefaultTableModel dt=(DefaultTableModel)vendors_table.getModel();
                    dt.setRowCount(0);
                    while(rs.next())
                    {
                        Vector v=new Vector();
                    
                        for(int a=1;a<=c;a++)
                        {
                            v.add(rs.getString("ID"));
                            v.add(rs.getString("Name"));
                            v.add(rs.getString("Contact"));
                            v.add(rs.getString("Cattle"));
                            v.add(rs.getString("Address"));
                        }
                    dt.addRow(v);
                    
                    }
               con.close();
                }
                }    
         }
        catch(HeadlessException | ClassNotFoundException | SQLException e){
                JOptionPane.showMessageDialog(null,e);
            }
    }//GEN-LAST:event_btn_serachActionPerformed

    private void btn_showallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_showallActionPerformed
        vendor_update();
        txt_search.setText("");
    }//GEN-LAST:event_btn_showallActionPerformed

    private void btn_mn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_mn_saveActionPerformed
        String name=txt_item_name.getText();
        String price=txt_price.getText();
        if(name.equals("") | price.equals(""))
        {
            JOptionPane.showMessageDialog(null,"All fields are required");
        }
        else
        {
            try
        {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/dms","DMS","Dairy@123");
            Statement stmt=con.createStatement();
            String sql="Select * from menu where item_name='" + txt_item_name.getText() + "'";
            ResultSet rs=stmt.executeQuery(sql);
            if(rs.next())
            {
                JOptionPane.showMessageDialog(null,"Item already exists");
            }
            else
            {
               String str1="insert into menu values(?,?,?)";
               PreparedStatement pst=con.prepareStatement(str1);
               pst.setString(1,(txt_item_no.getText()));
               pst.setString(2,(txt_item_name.getText()));
               pst.setInt(3,Integer.parseInt(txt_price.getText()));
               pst.execute();
               item_no();
            }
            con.close();
            menu_update();
            txt_item_name.setText("");
            txt_price.setText("");  
            bill_menu_update();
         }
         catch(HeadlessException | ClassNotFoundException | SQLException e)
         {
             JOptionPane.showMessageDialog(null,e);
         }
        }
    }//GEN-LAST:event_btn_mn_saveActionPerformed
    private void item_no()
    {
     try{
            
        Class.forName("com.mysql.cj.jdbc.Driver");
        Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/dms","DMS","Dairy@123");
         String str="select MAX(item_no) from menu";
        PreparedStatement pst=con.prepareStatement(str);
        ResultSet rs= pst.executeQuery();
        rs.next();
        rs.getString("MAX(item_no)");
        
        if(rs.getString("MAX(item_no)")==null)
        {
            txt_item_no.setText("0001");
        }
        else
        {
            long no=Long.parseLong(rs.getString("MAX(item_no)").substring(2,rs.getString("MAX(item_no)").length()));
            no++;
            txt_item_no.setText(String.format("%04d",no));
        }
        }
        catch(HeadlessException | ClassNotFoundException | SQLException e){
                JOptionPane.showMessageDialog(null,e);
            }   
    }
   
    private void btn_mn_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_mn_clearActionPerformed
        item_no();
        txt_item_name.setText("");
        txt_price.setText("");
    }//GEN-LAST:event_btn_mn_clearActionPerformed

    private void menu_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menu_tableMouseClicked
        int i=menu_table.getSelectedRow();
        TableModel model= menu_table.getModel();
        txt_item_no.setText(model.getValueAt(i,0).toString());
        txt_item_name.setText(model.getValueAt(i,1).toString());
        txt_price.setText(model.getValueAt(i,2).toString());
    }//GEN-LAST:event_menu_tableMouseClicked

    private void btn_mn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_mn_deleteActionPerformed
        try
        {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/dms","DMS","Dairy@123");
            Statement stmt=con.createStatement();
            String sql="Select * from menu where item_name='" + txt_item_name.getText() + "'";
            ResultSet rs=stmt.executeQuery(sql);
            if(!rs.next())
            {
                JOptionPane.showMessageDialog(null,"Item Not present");
            }
            else
            {
               String str1="delete from menu where item_name='" + txt_item_name.getText() + "'";
               PreparedStatement pst=con.prepareStatement(str1);
               pst.execute();
               item_no();
            }
            con.close();
            menu_update();
            txt_item_name.setText("");
            txt_price.setText("");          
         }
         catch(HeadlessException | ClassNotFoundException | SQLException e)
         {
             JOptionPane.showMessageDialog(null,e);
         }
       
    }//GEN-LAST:event_btn_mn_deleteActionPerformed

    private void btn_mn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_mn_updateActionPerformed
        String name=txt_item_name.getText();
        String price=txt_price.getText();
        if(name.isEmpty() | price.isEmpty())
            JOptionPane.showMessageDialog(null, "All fields are required");
        else
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/dms","DMS","Dairy@123");
                String str="update menu set item_name=?, price=? where item_no=?";
                PreparedStatement pst=con.prepareStatement(str);
                pst.setString(1,txt_item_name.getText());
                pst.setInt(2,Integer.parseInt(txt_price.getText()));
                pst.setInt(3,Integer.parseInt(txt_item_no.getText()));
                pst.execute();
                JOptionPane.showMessageDialog(null, "Record Update");
                con.close();
                menu_update();
                txt_item_name.setText("");
                txt_price.setText("");
                item_no();
        
            }
            catch(HeadlessException | ClassNotFoundException | SQLException e){
                JOptionPane.showMessageDialog(null,e);
            }
    }//GEN-LAST:event_btn_mn_updateActionPerformed

    private void btn_mn_showallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_mn_showallActionPerformed
        menu_update();
    }//GEN-LAST:event_btn_mn_showallActionPerformed

    private void btn_mn_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_mn_searchActionPerformed
        String s=combo_mn.getSelectedItem().toString();
        String s1=txt_mn_search.getText();
         
        int c;
        if(s1.equals(""))
        {
            JOptionPane.showMessageDialog(this, "Select something to search");
        }
        else
        {
        try
        {
            if(s.equals("Item No"))
            {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/dms","DMS","Dairy@123");
            String stq="Select * from menu where item_no='" + s1 + "'";
            PreparedStatement pstr=con.prepareStatement(stq);
            ResultSet rs=pstr.executeQuery();
            if(!rs.next())
            {
                JOptionPane.showMessageDialog(this,"Data not found");
            }
            else
            {
            String sql="Select * from menu where item_no='"+s1+"'";
            Statement st=con.createStatement();
            ResultSet rs1=st.executeQuery(sql);
            ResultSetMetaData rss=rs1.getMetaData();           
            c=rss.getColumnCount();  
            DefaultTableModel dt=(DefaultTableModel)menu_table.getModel();
            dt.setRowCount(0);
                while(rs.next())
                {
                    Vector v=new Vector();
                    
                    for(int a=1;a<=c;a++)
                    {
                        v.add(rs.getString("item_no"));
                        v.add(rs.getString("item_name"));
                        v.add(rs.getString("price"));
                    }
                    dt.addRow(v);  
                }
                con.close();
            }
            }
            else if(s.equals("Item Name"))
            {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/dms","DMS","Dairy@123");
            String stq="Select * from menu where item_name='" + s1 + "'";
            PreparedStatement pstr=con.prepareStatement(stq);
            ResultSet rs=pstr.executeQuery();
            ResultSetMetaData rss=rs.getMetaData();
            c=rss.getColumnCount();  
            DefaultTableModel dt=(DefaultTableModel)menu_table.getModel();
            dt.setRowCount(0); 
                while(rs.next())
                {
                    
                    Vector v=new Vector();
                    
                    for(int a=1;a<=c;a++)
                    {
                        v.add(rs.getString("item_no"));
                        v.add(rs.getString("item_name"));
                        v.add(rs.getString("price"));
                    }
                    dt.addRow(v);  
                }
                
        
            con.close();
            }
            else
            {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/dms","DMS","Dairy@123");
            String stq="Select * from menu where price='" + s1 + "'";
            PreparedStatement pstr=con.prepareStatement(stq);
            ResultSet rs=pstr.executeQuery();
            ResultSetMetaData rss=rs.getMetaData();
            c=rss.getColumnCount();  
            DefaultTableModel dt=(DefaultTableModel)menu_table.getModel();
            dt.setRowCount(0);
                while(rs.next())
                {
                    Vector v=new Vector();
                    
                    for(int a=1;a<=c;a++)
                    {
                        v.add(rs.getString("item_no"));
                        v.add(rs.getString("item_name"));
                        v.add(rs.getString("price"));
                    }
                    dt.addRow(v);  
                }
                con.close();
            }
    }
         catch(HeadlessException | ClassNotFoundException | SQLException e)
         {
             JOptionPane.showMessageDialog(null,e);
         }
        }
    }//GEN-LAST:event_btn_mn_searchActionPerformed

    private void bill_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bill_btnActionPerformed
        bill_pnl.setVisible(true);
        vendors_pnl.setVisible(false);
        menu_pnl.setVisible(false);
        report_pnl.setVisible(false);
       
    }//GEN-LAST:event_bill_btnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        report_pnl.setVisible(true);
        bill_pnl.setVisible(false);
        vendors_pnl.setVisible(false);
        menu_pnl.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btn_bill_additemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_bill_additemActionPerformed
//        String itn=;
//        int rate=);
        String qty=txt_bill_quantity.getValue().toString();
        int qt=Integer.parseInt(txt_bill_quantity.getValue().toString());

        if(txt_bill_name.getText().equals("") | (txt_bill_rate.getText()).equals("")| qt<1 )
        {
            JOptionPane.showMessageDialog(null, "Select Item");
            
        }
        else
        {
            try
            {
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/dms","DMS","Dairy@123");
                String s="select * from y_order where item_name='"+txt_bill_name.getText()+"'";
                Statement st=con.createStatement();
                ResultSet rs=st.executeQuery(s);
                if(!rs.next())
                {
                String str="INSERT INTO y_order VALUES (?,?,?,?)";
                PreparedStatement pst=con.prepareStatement(str);
                pst.setString(1,txt_bill_name.getText());
                pst.setInt(2,Integer.parseInt(txt_bill_rate.getText()));
                pst.setInt(3,Integer.parseInt(txt_bill_quantity.getValue().toString()));
                Double price=(Double.parseDouble(txt_bill_rate.getText()))*(Double.parseDouble(txt_bill_quantity.getValue().toString()));
                pst.setDouble(4,price);               
                pst.execute();
                con.close();
                your_order();
                total_price();    
                }    
                else
                {
                JOptionPane.showMessageDialog(null, "Item already exists");
            }
            }
            catch(HeadlessException | ClassNotFoundException | SQLException e)
         {
            
            JOptionPane.showMessageDialog(null,e);
         }
        }       
    }//GEN-LAST:event_btn_bill_additemActionPerformed
    
    private void bill_menu_tableFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bill_menu_tableFocusGained
        int i=bill_menu_table.getSelectedRow();
        TableModel model= bill_menu_table.getModel();
        txt_bill_name.setText(model.getValueAt(i,1).toString());
        txt_bill_rate.setText(model.getValueAt(i,2).toString());
        
    }//GEN-LAST:event_bill_menu_tableFocusGained

    private void bill_menu_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bill_menu_tableMouseClicked
        int i=bill_menu_table.getSelectedRow();
        TableModel model= bill_menu_table.getModel();
        txt_bill_name.setText(model.getValueAt(i,1).toString());
        txt_bill_rate.setText(model.getValueAt(i,2).toString());
    }//GEN-LAST:event_bill_menu_tableMouseClicked

    private void bill_menu_tableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bill_menu_tableKeyPressed
        int i=bill_menu_table.getSelectedRow();
        TableModel model= bill_menu_table.getModel();
        txt_bill_name.setText(model.getValueAt(i,1).toString());
        txt_bill_rate.setText(model.getValueAt(i,2).toString());
    }//GEN-LAST:event_bill_menu_tableKeyPressed

    private void menu_tableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_menu_tableKeyPressed
        int i=menu_table.getSelectedRow();
        TableModel model= menu_table.getModel();
        txt_item_no.setText(model.getValueAt(i,0).toString());
        txt_item_name.setText(model.getValueAt(i,1).toString());
        txt_price.setText(model.getValueAt(i,2).toString());
    }//GEN-LAST:event_menu_tableKeyPressed

    private void vendors_tableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_vendors_tableKeyPressed
        int i=vendors_table.getSelectedRow();
        TableModel model= vendors_table.getModel();
        txt_id.setText(model.getValueAt(i,0).toString());
        txt_name.setText(model.getValueAt(i,1).toString());
        txt_contact.setText(model.getValueAt(i,2).toString());
        txt_cattle.setSelectedItem(model.getValueAt(i,3));
        txt_address.setText(model.getValueAt(i,4).toString());
    }//GEN-LAST:event_vendors_tableKeyPressed

    private void order_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_order_tableMouseClicked
      int i=order_table.getSelectedRow();
      TableModel model= order_table.getModel();
      txt_bill_name.setText(model.getValueAt(i,0).toString());
      txt_bill_rate.setText(model.getValueAt(i,1).toString());
      txt_bill_quantity.setValue(model.getValueAt(i,2));
    }//GEN-LAST:event_order_tableMouseClicked

    private void order_tableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_order_tableKeyPressed
      int i=order_table.getSelectedRow();
      TableModel model= order_table.getModel();
      txt_bill_name.setText(model.getValueAt(i,0).toString());
      txt_bill_rate.setText(model.getValueAt(i,1).toString());
      txt_bill_quantity.setValue(model.getValueAt(i,2));
    }//GEN-LAST:event_order_tableKeyPressed

    private void btn_bill_rmitemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_bill_rmitemActionPerformed
        int qt=Integer.parseInt(txt_bill_quantity.getValue().toString());
        if(txt_bill_name.getText().equals("") | (txt_bill_rate.getText()).equals(""))
        {
            JOptionPane.showMessageDialog(null, "Select Item");   
        }
        else
        {
            try
            {
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/dms","DMS","Dairy@123");
                String s="select * from y_order where item_name='"+txt_bill_name.getText()+"'";
                Statement st=con.createStatement();
                ResultSet rs=st.executeQuery(s);
                if(rs.next())
                {
                String str="DELETE FROM y_order where item_name=?";
                PreparedStatement pst=con.prepareStatement(str);
                pst.setString(1,txt_bill_name.getText());  
                pst.execute();
                JOptionPane.showMessageDialog(null, "Item Removed");
                con.close();
                your_order();
                total_price();
                }    
                else
                {
                JOptionPane.showMessageDialog(null, "Item not found");
                }
            }
            catch(HeadlessException | ClassNotFoundException | SQLException e)
         {   
            JOptionPane.showMessageDialog(null,e);
         }
        }
    }//GEN-LAST:event_btn_bill_rmitemActionPerformed

    private void btn_bill_updateqtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_bill_updateqtyActionPerformed
        int qt=Integer.parseInt(txt_bill_quantity.getValue().toString());
        if(txt_bill_name.getText().equals("") | (txt_bill_rate.getText()).equals("") |qt<1)
        {
            JOptionPane.showMessageDialog(null, "Select Item");
            
        }
        else
        {
            try
            {
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/dms","DMS","Dairy@123");
                String s="select * from y_order where item_name='"+txt_bill_name.getText()+"'";
                Statement st=con.createStatement();
                ResultSet rs=st.executeQuery(s);
                if(rs.next())
                {
                    if(qt<0)
                    {
                        JOptionPane.showMessageDialog(null, "Select Quantity");
                    }
                    else
                    {                       
                    String str="update y_order set quantity=?,price=? where item_name=?";
                    PreparedStatement pst=con.prepareStatement(str);
                    pst.setInt(1,Integer.parseInt(txt_bill_quantity.getValue().toString()));
                    Double price=(Double.parseDouble(txt_bill_rate.getText()))*(Double.parseDouble(txt_bill_quantity.getValue().toString()));
                    pst.setDouble(2,price); 
                    pst.setString(3,txt_bill_name.getText());  
                    pst.execute();
                    JOptionPane.showMessageDialog(null, "Quantity Updated");
                    con.close();
                    your_order();
                    total_price();
                    }  
                }    
                else
                {
                JOptionPane.showMessageDialog(null, "Item not found");
                }
            }
            catch(HeadlessException | ClassNotFoundException | SQLException e)
         {
            
            JOptionPane.showMessageDialog(null,e);
         }
        }
    }//GEN-LAST:event_btn_bill_updateqtyActionPerformed

    private void btn_cancel_orderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancel_orderActionPerformed
        int rc=order_table.getRowCount();
        if(rc==0)
        {
            JOptionPane.showMessageDialog(null, "No item in Cart");   
        }
        else
        {
            try
            {
            int a=JOptionPane.showConfirmDialog(null,"Do you really want cancel order","Select",JOptionPane.YES_NO_OPTION);
                if (a==0)
                {  
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/dms","DMS","Dairy@123");
                String str="Truncate table y_order";
                PreparedStatement pst=con.prepareStatement(str); 
                pst.execute();
                JOptionPane.showMessageDialog(null, "Order Cancelled");
                con.close();
                your_order();
                total_price();
                }  
            }
            catch(HeadlessException | ClassNotFoundException | SQLException e)
         {   
            JOptionPane.showMessageDialog(null,e);
         }
        }
    }//GEN-LAST:event_btn_cancel_orderActionPerformed
    
    public void invoice_number()
    {   
        try
            {
                String inv_no;
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/dms","DMS","Dairy@123");               
                String str="select COUNT(bill_no) from menu";
                PreparedStatement pst=con.prepareStatement(str);
                ResultSet rs= pst.executeQuery();
                rs.next();
                rs.getString("COUNT(bill_no)");

                if(rs.getString("MAX(bill_no)")==null)
                {
                    inv_no="00001";
                }
                else
                {
                    long no=Long.parseLong(rs.getString("COUNT(item_no)").substring(2,rs.getString("COUNT(item_no)").length()));
                    no++;
                    inv_no=(String.format("%05d",no));
                }
        }
        catch(HeadlessException | ClassNotFoundException | SQLException e)
         {   
            JOptionPane.showMessageDialog(null,e);
         }
    }
    
    
    private void btn_billActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_billActionPerformed
       String cust_name = txt_cust_name.getText();
       String cust_contact = txt_cust_contact.getText();
       String regex_contact = "[7-9][0-9]{9}";
       String req= "^[a-zA-Z]*$";
       DefaultTableModel dm = (DefaultTableModel) order_table.getModel();
       int count=dm.getRowCount();

       if(count==0)
       {
           JOptionPane.showMessageDialog(this, "Your cart is empty");
       }
       else
       {
       
       try
            {
                SimpleDateFormat sdf=new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
                Date date=new Date();
                String time=sdf.format(date);
                SimpleDateFormat sdf1=new SimpleDateFormat("yyyy/MM/dd");
                String time1=sdf1.format(date);
                String inv_no;
                Double sum=0.00;
                for (int i=0; i < order_table.getRowCount();i++)
                {
                    sum=sum + Double.parseDouble(order_table.getValueAt(i,3).toString());
                }
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/dms","DMS","Dairy@123");               
                String str="select MAX(bill_no) from bill_record";
                Statement st=con.createStatement();
                ResultSet rs= st.executeQuery(str);
                rs.next();
                rs.getString("MAX(bill_no)");

                if(rs.getString("MAX(bill_no)")==null)
                {
                    inv_no="00001";
                }
                else
                {
                    long no=Long.parseLong(rs.getString("MAX(bill_no)").substring(2,rs.getString("MAX(bill_no)").length()));
                    no++;
                    inv_no=(String.format("%05d",no));
                }
                
            
   
//       DefaultTableModel dm = (DefaultTableModel) order_table.getModel();
        if (cust_name.isEmpty() || cust_contact.isEmpty() ) {
            JOptionPane.showMessageDialog(this, "Fill all the details");
            } 
        else if (!cust_name.matches(req))
        {
            JOptionPane.showMessageDialog(this,"Invalid Name");
        }
        else if (cust_contact.matches("^[0-9]+$")) {
            if (!cust_contact.matches("[7-9][0-9]{9}")) {
                    JOptionPane.showMessageDialog(this, "Enter valid Contact number");
              } else {
//                    Pdf p=new Pdf();
                    Document doc = new Document();
                        String userDirectory = System.getProperty("user.dir");

                        try {
                            PdfWriter.getInstance(doc, new FileOutputStream(userDirectory + "/customer_bills/" + inv_no + ".pdf"));
                            doc.open();

                          FontSelector fs = new FontSelector();
                            Font font = FontFactory.getFont(FontFactory.TIMES_ROMAN, 20, Font.BOLD);
			  fs.addFont(font);
                            String para = "Gokul Dairy \n Thane (W)";
                            Paragraph heading = new Paragraph(para, font);
                            heading.setSpacingAfter(20.0f);
                            heading.setAlignment(Paragraph.ALIGN_CENTER);
                            Paragraph line = new Paragraph("--------------------------------------------------- INVOICE ----------------------------------------------------");
                            line.setIndentationLeft(30);        
                            Paragraph name = new Paragraph("Bill Number     : "+inv_no+"                                                          Phone Number : "+cust_contact );
                            name.setIndentationLeft(30);
                            Paragraph contact = new Paragraph("Customer Name   :  "+cust_name+ "                                                      Date : "+time);
                            contact.setIndentationLeft(30);
                            String pa = "Total Amount : Rs. "+ txt_total_price.getText() ;
                            Font font1 = FontFactory.getFont(FontFactory.TIMES_ROMAN, 16);
                            Paragraph tp = new Paragraph(pa,font1);
                            tp.setSpacingAfter(20.0f);
                            tp.setAlignment(Paragraph.ALIGN_RIGHT);
                            tp.setIndentationRight(30);
                            Paragraph genby =new Paragraph("Bill generated by: " + System.getProperty("user.name") + ", " + new Date());
                            genby.setIndentationLeft(30);
                            
                            Paragraph l=new Paragraph("----------------------------------------------------------------------------------------------------------------------");
                            l.setIndentationLeft(30);
                            
                            
                            String ty="Thank You!!! \n Visit Again!!!";
                            Paragraph t=new Paragraph(ty,font1);
                            t.setIndentationLeft(30);
                            t.setAlignment(Paragraph.ALIGN_CENTER);
                            
                            
                             
                            PdfPTable table = new PdfPTable(4);                            
                            table.setHeaderRows(1);
                            table.setWidthPercentage(90);
                            table.setWidths(new float[] {3,2,1,2});
                            table.setSpacingBefore(20.0f);
                            
                            table.addCell("Item Name");
                            table.addCell("Rate");
                            table.addCell("Quantity");
                            table.addCell("Price");
                            
                           

                             for(int i=0;i<order_table.getRowCount();i++)
                             {
                                String Item_name=order_table.getValueAt(i,0).toString();
                                String rate=order_table.getValueAt(i,1).toString();
                                String quantity=order_table.getValueAt(i,2).toString();
                                String price=order_table.getValueAt(i,3).toString();

                               
                                table.addCell(Item_name);
                                table.addCell(rate);
                                table.addCell(quantity);
                                table.addCell(price);
                            }
                        
                            doc.add(heading);
                            doc.add(line);
                            doc.add(name);
                            doc.add(contact);
                            doc.add(table);
                            doc.add(tp);
                            doc.add(l);
                            doc.add(t);
                            doc.add(l);
                            doc.bottomMargin();
                            doc.add(genby);

                        } catch (FileNotFoundException ex) {
                            Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
                        } catch (DocumentException e) {
                            JOptionPane.showMessageDialog(null,e);
                        }

                        doc.close();                
                String sql="insert into bill_record values(?,?,?,?,?)";
                PreparedStatement pst=con.prepareStatement(sql);
                pst.setString(1, inv_no);
                pst.setString(2,cust_name);
                pst.setString(3,cust_contact);
                pst.setDouble(4,sum);
                pst.setString(5,time1);
                pst.execute();
                        File pdfFile = new File("customer_bills/" + inv_no + ".pdf");
                        try {
                            Desktop.getDesktop().open(pdfFile);
                        } catch (IOException ex) { 
                    Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
                } 
                        trun();
                        txt_cust_name.setText("");
                        txt_cust_contact.setText("");
            }              
            } else 
                {
                JOptionPane.showMessageDialog(this, "Contact no must be of 10 digit and start with 7 to 9");
                }
            }
        catch(HeadlessException | ClassNotFoundException | SQLException e)
         {   
            JOptionPane.showMessageDialog(null,e);
         } 
       }
    }//GEN-LAST:event_btn_billActionPerformed

    private void trun()
    {
        try
            {
           
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/dms","DMS","Dairy@123");
                String str="Truncate table y_order";
                PreparedStatement pst=con.prepareStatement(str); 
                pst.execute();
                con.close();
                your_order();
                total_price();
                 
            }
            catch(HeadlessException | ClassNotFoundException | SQLException e)
         {   
            JOptionPane.showMessageDialog(null,e);
         }
    }
    
    
    private void btn_bill_showallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_bill_showallActionPerformed
        bill_menu_update();
    }//GEN-LAST:event_btn_bill_showallActionPerformed

    private void btn_bill_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_bill_searchActionPerformed
        String s=combo_bill.getSelectedItem().toString();
        String s1=txt_bii_search.getText();
        
       if(s1.isBlank())
       {
           JOptionPane.showMessageDialog(this,"Select something to search");
       }
       else
       {
        int c;
        try
        {
            if(s.equals("Item No"))
            {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/dms","DMS","Dairy@123");
            String stq="Select * from menu where item_no='" + s1 + "'";
            PreparedStatement pstr=con.prepareStatement(stq);
            ResultSet rs=pstr.executeQuery();
            ResultSetMetaData rss=rs.getMetaData();
            c=rss.getColumnCount();  
            DefaultTableModel dt=(DefaultTableModel)bill_menu_table.getModel();
            dt.setRowCount(0);
                while(rs.next())
                {
                    Vector v=new Vector();
                    
                    for(int a=1;a<=c;a++)
                    {
                        v.add(rs.getString("item_no"));
                        v.add(rs.getString("item_name"));
                        v.add(rs.getString("price"));
                    }
                    dt.addRow(v);  
                }
                con.close();
            }         
            else if(s.equals("Item Name"))
            {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/dms","DMS","Dairy@123");
            String stq="Select * from menu where item_name='" + s1 + "'";
            PreparedStatement pstr=con.prepareStatement(stq);
            ResultSet rs=pstr.executeQuery();
            ResultSetMetaData rss=rs.getMetaData();
            c=rss.getColumnCount();  
            DefaultTableModel dt=(DefaultTableModel)bill_menu_table.getModel();
            dt.setRowCount(0); 
                while(rs.next())
                {
                   
                    Vector v=new Vector();
                    
                    for(int a=1;a<=c;a++)
                    {
                        v.add(rs.getString("item_no"));
                        v.add(rs.getString("item_name"));
                        v.add(rs.getString("price"));
                    }
                    dt.addRow(v);  
                }
                
        
            con.close();
            }
            else
            {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/dms","DMS","Dairy@123");
            String stq="Select * from menu where price='" + s1 + "'";
            PreparedStatement pstr=con.prepareStatement(stq);
            ResultSet rs=pstr.executeQuery();
            ResultSetMetaData rss=rs.getMetaData();
            c=rss.getColumnCount();  
            DefaultTableModel dt=(DefaultTableModel)bill_menu_table.getModel();
            dt.setRowCount(0);
                while(rs.next())
                {
                    Vector v=new Vector();
                    
                    for(int a=1;a<=c;a++)
                    {
                        v.add(rs.getString("item_no"));
                        v.add(rs.getString("item_name"));
                        v.add(rs.getString("price"));
                    }
                    dt.addRow(v);  
                }
                con.close();
            }
    }
         catch(HeadlessException | ClassNotFoundException | SQLException e)
         {
             JOptionPane.showMessageDialog(null,e);
         }
       }
    }//GEN-LAST:event_btn_bill_searchActionPerformed

    private void gen_reportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gen_reportActionPerformed
        if(r_day.isSelected()==true)
        {
            report_clear.setVisible(true);
           reort_table.setVisible(true);
           summary_pnl.setVisible(true);
           
            try
            {
            int c;
            SimpleDateFormat sdf=new SimpleDateFormat("yyyy/MM/dd");
                Date date=new Date();
                String time=sdf.format(date);
            
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/dms","DMS","Dairy@123");
            String stq="Select * from bill_record where time_stamp='" + time+ "'";
//            String stq="Select * from bill_record";
            PreparedStatement pstr=con.prepareStatement(stq);
            ResultSet rs=pstr.executeQuery();
            ResultSetMetaData rss=rs.getMetaData();
            c=rss.getColumnCount();  
            DefaultTableModel dt=(DefaultTableModel)report_table.getModel();
            dt.setRowCount(0);
                while(rs.next())
                {
                    Vector v=new Vector();
                    
                    for(int a=1;a<=c;a++)
                    {
                        v.add(rs.getString("bill_no"));
                        v.add(rs.getString("cust_name"));
                        v.add(rs.getString("cust_no"));
                        v.add(rs.getString("total_amount"));
                        v.add(rs.getString("time_stamp"));
                        
                    }
                    dt.addRow(v);  
                }
            con.close();
            
            
//            DefaultTableModel dt=(DefaultTableModel)report_table.getModel();
            int total_bill=dt.getRowCount();
            txt_total_bill.setText("Total Number of Bills : " +Integer.toString(total_bill));
            Double t_amt = 0.0;
            for (int i=0; i < report_table.getRowCount();i++)
                {
                    t_amt=t_amt + Double.parseDouble(report_table.getValueAt(i,3).toString());
                }
            
            txt_t_amt.setText("Total Amount : Rs. " +Double.toString(t_amt)+"/-");
            
            SimpleDateFormat sdf1=new SimpleDateFormat("yyyy-MM-dd");
                Date date1=new Date();
                String time1=sdf1.format(date1);
            txt_r_date.setText("Report of : "+time1);
            
            lbl_gen.setText("Genereted On :"+String.valueOf(new Date()));
            
            }
         catch(HeadlessException | ClassNotFoundException | SQLException e)
         {
             JOptionPane.showMessageDialog(null,e);
         }
    }   
        else if(r_week.isSelected()==true)
        {
            report_clear.setVisible(true);
           reort_table.setVisible(true);
           summary_pnl.setVisible(true);
           
            try
            {
            int c;
            SimpleDateFormat sdf=new SimpleDateFormat("yyyy/MM/dd");
                Date date=new Date();
                String time=sdf.format(date);
           
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/dms","DMS","Dairy@123");
//            String stq="Select * from bill_record where time_stamp='" + time+ "'";
            String stq="select * from bill_record where time_stamp between date_sub(now(),INTERVAL 1 WEEK) and now()";
            PreparedStatement pstr=con.prepareStatement(stq);
            ResultSet rs=pstr.executeQuery();
            ResultSetMetaData rss=rs.getMetaData();
            c=rss.getColumnCount();  
            DefaultTableModel dt=(DefaultTableModel)report_table.getModel();
            dt.setRowCount(0);
                while(rs.next())
                {
                    Vector v=new Vector();
                    
                    for(int a=1;a<=c;a++)
                    {
                        v.add(rs.getString("bill_no"));
                        v.add(rs.getString("cust_name"));
                        v.add(rs.getString("cust_no"));
                        v.add(rs.getString("total_amount"));
                        v.add(rs.getString("time_stamp"));
                        
                    }
                    dt.addRow(v);  
                }
            con.close();
            int total_bill=dt.getRowCount();
            txt_total_bill.setText("Total Number of Bills : " +Integer.toString(total_bill));
            Double t_amt = 0.0;
            for (int i=0; i < report_table.getRowCount();i++)
                {
                    t_amt=t_amt + Double.parseDouble(report_table.getValueAt(i,3).toString());
                }
            
            txt_t_amt.setText("Total Amount : Rs. " +Double.toString(t_amt)+"/-");
            
            LocalDate currentDate = LocalDate.now();     
            LocalDate result = currentDate.minus(1, ChronoUnit.WEEKS);
           
            txt_r_date.setText("Report of : "+currentDate+ " TO " +result);
            
            lbl_gen.setText("Genereted On :"+String.valueOf(new Date()));
            
            }
         catch(HeadlessException | ClassNotFoundException | SQLException e)
         {
             JOptionPane.showMessageDialog(null,e);
         }
        }
        else if(r_month.isSelected()==true)
        {
           report_clear.setVisible(true);
           reort_table.setVisible(true);
           summary_pnl.setVisible(true);
           
            try
            {
            int c;
            SimpleDateFormat sdf=new SimpleDateFormat("yyyy/MM/dd");
                Date date=new Date();
                String time=sdf.format(date);
         
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/dms","DMS","Dairy@123");
            String stq="select * from bill_record where time_stamp between date_sub(now(),INTERVAL 1 MONTH) and now()";
            PreparedStatement pstr=con.prepareStatement(stq);
            ResultSet rs=pstr.executeQuery();
            ResultSetMetaData rss=rs.getMetaData();
            c=rss.getColumnCount();  
            DefaultTableModel dt=(DefaultTableModel)report_table.getModel();
            dt.setRowCount(0);
                while(rs.next())
                {
                    Vector v=new Vector();
                    
                    for(int a=1;a<=c;a++)
                    {
                        v.add(rs.getString("bill_no"));
                        v.add(rs.getString("cust_name"));
                        v.add(rs.getString("cust_no"));
                        v.add(rs.getString("total_amount"));
                        v.add(rs.getString("time_stamp"));
                        
                    }
                    dt.addRow(v);  
                }
            con.close();
            int total_bill=dt.getRowCount();
            txt_total_bill.setText("Total Number of Bills : " +Integer.toString(total_bill));
            Double t_amt = 0.0;
            for (int i=0; i < report_table.getRowCount();i++)
                {
                    t_amt=t_amt + Double.parseDouble(report_table.getValueAt(i,3).toString());
                }
           
            txt_t_amt.setText("Total Amount : Rs. " +Double.toString(t_amt)+"/-");
            
            LocalDate currentDate = LocalDate.now();     
            LocalDate result = currentDate.minus(1, ChronoUnit.MONTHS);
           
            txt_r_date.setText("Report of : "+currentDate+ " TO " +result);
            
            lbl_gen.setText("Genereted On :"+String.valueOf(new Date()));
            
            
            }
         catch(HeadlessException | ClassNotFoundException | SQLException e)
         {
             JOptionPane.showMessageDialog(null,e);
         }
        }  
        else if(j_selectdate.isSelected()==true)
        {
            SimpleDateFormat sdf=new SimpleDateFormat("yyyy/MM/dd");
            Date date=new Date();
            String time=sdf.format(date);
            Date from1 = date_from.getDate();
            String from=sdf.format(from1);
            Date to1 = date_to.getDate();
            String to=sdf.format(to1);
            try
            {
            Date d1=sdf.parse(from);
            Date d2=sdf.parse(to);
            long dif=d1.getTime() - d2.getTime();
            
            if(dif<0)
            {
                JOptionPane.showMessageDialog(null, "Select Proper Dates");
            }
            else
            {
           report_clear.setVisible(true);
           reort_table.setVisible(true);
           summary_pnl.setVisible(true);
           
            try
            {
            int c;
            
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/dms","DMS","Dairy@123");
            String stq="select * from bill_record where time_stamp BETWEEN '"+ to+"' AND '"+from+"' ";
            PreparedStatement pstr=con.prepareStatement(stq);
            ResultSet rs=pstr.executeQuery();
            ResultSetMetaData rss=rs.getMetaData();
            c=rss.getColumnCount();  
            DefaultTableModel dt=(DefaultTableModel)report_table.getModel();
            dt.setRowCount(0);
                while(rs.next())
                {
                    Vector v=new Vector();
                    
                    for(int a=1;a<=c;a++)
                    {
                        v.add(rs.getString("bill_no"));
                        v.add(rs.getString("cust_name"));
                        v.add(rs.getString("cust_no"));
                        v.add(rs.getString("total_amount"));
                        v.add(rs.getString("time_stamp"));
                        
                    }
                    dt.addRow(v);  
                }
            con.close();
            int total_bill=dt.getRowCount();
            txt_total_bill.setText("Total Number of Bills : " +Integer.toString(total_bill));
            Double t_amt = 0.0;
            for (int i=0; i < report_table.getRowCount();i++)
                {
                    t_amt=t_amt + Double.parseDouble(report_table.getValueAt(i,3).toString());
                }
          
            txt_t_amt.setText("Total Amount : Rs. " +Double.toString(t_amt)+"/-");
            
            LocalDate currentDate = LocalDate.now();     
            LocalDate result = currentDate.minus(1, ChronoUnit.MONTHS);
           
            txt_r_date.setText("Report of : "+to+ " TO " +from);
            
            lbl_gen.setText("Genereted On :"+String.valueOf(new Date()));
            
            }
            
         catch(HeadlessException | ClassNotFoundException | SQLException e)
         {
             JOptionPane.showMessageDialog(null,e);
         }
        }  
        
            } catch (ParseException ex) {
                Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_gen_reportActionPerformed

    private void report_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_report_clearActionPerformed
        DefaultTableModel dt=(DefaultTableModel)report_table.getModel();
        dt.setNumRows(0);
        txt_total_bill.setText("");
        txt_t_amt.setText("");
        txt_r_date.setText("");
        lbl_gen.setText("");
        reort_table.setVisible(false);
        summary_pnl.setVisible(false);
        report_clear.setVisible(false);
        
    }//GEN-LAST:event_report_clearActionPerformed

    private void r_dayFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_r_dayFocusGained
      
    }//GEN-LAST:event_r_dayFocusGained

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
//        final JPanel panel = new JPanel();
//        final JRadioButton pdf = new JRadioButton("PDF");
//        final JRadioButton excel = new JRadioButton("Excel");
//        final ButtonGroup g= new ButtonGroup();
//        g.add(pdf);
//        g.add(excel);
//        panel.add(pdf);
//        panel.add(excel);     
//        JOptionPane.showMessageDialog(null, panel, "Select Format",WIDTH);
//        if(pdf.isSelected()==true)
//        {       
                Random ran=new Random();
                int ran1=ran.nextInt(100);
                String na=txt_r_date.getText().replace("-", " ");
                String name2=na.replace(":", "");
               
                String name=ran1+name2;
                if(name.contains("/"))
                {
                    name=name.replace("/","");
                }
                String abc="abc1";
                DefaultTableModel dm = (DefaultTableModel) report_table.getModel();
                Document doc = new Document();
                String userDirectory = System.getProperty("user.dir");
                        try {
                            PdfWriter.getInstance(doc, new FileOutputStream(userDirectory + "/Reports/" + name + ".pdf"));
                            doc.open();
                            FontSelector fs = new FontSelector();
                          Font font = FontFactory.getFont(FontFactory.TIMES_ROMAN, 20, Font.BOLD);
			  fs.addFont(font);
                            String para = "Gokul Dairy \n Thane (W)";
                            Paragraph heading = new Paragraph(para, font);
                            heading.setSpacingAfter(20.0f);
                            heading.setAlignment(Paragraph.ALIGN_CENTER);
                            Paragraph line = new Paragraph("--------------------------------------------------- Report ------------------------------------------------------");
                            line.setIndentationLeft(30);        
                            Paragraph report_of = new Paragraph(txt_r_date.getText());
                            report_of.setIndentationLeft(30);
                            Paragraph l=new Paragraph("--------------------------------------------------------------------------------------------------------------------");
                            l.setIndentationLeft(30);
                            Paragraph total_bills = new Paragraph(txt_total_bill.getText());
                            total_bills.setIndentationLeft(30);
                            Paragraph total_amount = new Paragraph(txt_t_amt.getText());
                            total_amount.setIndentationLeft(30);   
                            Paragraph end = new Paragraph("*****End of Report*****");
                            end.setIndentationLeft(30);
                            end.setAlignment(Paragraph.ALIGN_CENTER);
                            Paragraph genat = new Paragraph(lbl_gen.getText());
                            genat.setIndentationRight(30);
                            genat.setAlignment(Paragraph.ALIGN_RIGHT);
                            Paragraph blank = new Paragraph("");
                            blank.setIndentationLeft(30);
                            
                            PdfPTable table = new PdfPTable(5);                            
                            table.setHeaderRows(1);
                            table.setWidthPercentage(90);
                            table.setWidths(new float[] {2,2,2,2,2});
                            table.setSpacingBefore(20.0f);
            
                            table.addCell("Bill No");
                            table.addCell("Customer Name");
                            table.addCell("Contact Number");
                            table.addCell("Total Amount");
                            table.addCell("Date");
                            for(int i=0;i<report_table.getRowCount();i++)
                             {
                                String bill_no=report_table.getValueAt(i,0).toString();
                                String cust_name=report_table.getValueAt(i,1).toString();
                                String cust_contact=report_table.getValueAt(i,2).toString();
                                String total_price=report_table.getValueAt(i,3).toString();
                                String date=report_table.getValueAt(i,4).toString();


                                table.addCell(bill_no);
                                table.addCell(cust_name);
                                table.addCell(cust_contact);
                                table.addCell(total_price);
                                table.addCell(date);
                            }
                            
                            doc.add(heading);
                            doc.add(line);
                            doc.add(report_of);
                            doc.add(l);
                            doc.add(table);
                            doc.add(l);
                            doc.add(total_bills);
                            doc.add(total_amount);
                            doc.add(l);
                            doc.add(genat);
                            doc.add(blank);
                            doc.add(end);

                        } 
                        catch (DocumentException e) {
                            JOptionPane.showMessageDialog(null,e);
                        } catch (FileNotFoundException ex) {
                Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
            }
                        doc.close();
                        File pdfFile = new File("Reports/" + name+ ".pdf");
                        try 
                        {
                        Desktop.getDesktop().open(pdfFile);
                        } 
                        catch (IOException ex) 
                        { 
                            Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
                        }      
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dashboard().setVisible(true);
            }
        });
    }
    
    
    
        private void seticon() {
      setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("1232.jpg")));
    }

    private void vendor_update() {
        int c;
        try{
            
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/dms","DMS","Dairy@123");
                String stq="select * from vendors";
                PreparedStatement pstr=conn.prepareStatement(stq);
                ResultSet rs=pstr.executeQuery();
                ResultSetMetaData rss=rs.getMetaData();
                c=rss.getColumnCount();
                DefaultTableModel dt=(DefaultTableModel)vendors_table.getModel();
                dt.setRowCount(0);
                while(rs.next())
                {
                    Vector v=new Vector();
                    
                    for(int a=1;a<=c;a++)
                    {
                        v.add(rs.getString("ID"));
                        v.add(rs.getString("Name"));
                        v.add(rs.getString("Contact"));
                        v.add(rs.getString("Cattle"));
                        v.add(rs.getString("Address"));
                    }
                    dt.addRow(v);
                    
                }
               conn.close();
        }
        
        catch(ClassNotFoundException | SQLException e){
            
            JOptionPane.showMessageDialog(null,e);
        }
    }
    
    private void menu_update() {
        int c;
        try{
            
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/dms","DMS","Dairy@123");
                String stq="select * from menu";
                PreparedStatement pstr=conn.prepareStatement(stq);
                ResultSet rs=pstr.executeQuery();
                ResultSetMetaData rss=rs.getMetaData();
                c=rss.getColumnCount();
                DefaultTableModel dt=(DefaultTableModel)menu_table.getModel();
                dt.setRowCount(0);
                while(rs.next())
                {
                    Vector v=new Vector();
                    
                    for(int a=1;a<=c;a++)
                    {
                        v.add(rs.getString("item_no"));
                        v.add(rs.getString("item_name"));
                        v.add(rs.getString("price"));
                    }
                    dt.addRow(v);
                    
                }
               conn.close();
        }
        
        catch(ClassNotFoundException | SQLException e){
            
            JOptionPane.showMessageDialog(null,e);
        }
    }
    
    private void bill_menu_update() {
        int c;
        try{
            
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/dms","DMS","Dairy@123");
                String stq="select * from menu";
                Statement pstr=conn.createStatement();
                ResultSet rs=pstr.executeQuery(stq);
                ResultSetMetaData rss=rs.getMetaData();
                c=rss.getColumnCount();
                DefaultTableModel dt=(DefaultTableModel)bill_menu_table.getModel();
                dt.setRowCount(0);
                while(rs.next())
                {
                    Vector v=new Vector();
                    
                    for(int a=1;a<=c;a++)
                    {
                        v.add(rs.getString("item_no"));
                        v.add(rs.getString("item_name"));
                        v.add(rs.getString("price"));
                    }
                    dt.addRow(v);
                    
                }
               conn.close();
        }
        
        catch(ClassNotFoundException | SQLException e){
            
            JOptionPane.showMessageDialog(null,e);
        }
    }

    private void clear() {
        txt_id.setText("");
        txt_name.setText("");
        txt_contact.setText("");
        txt_cattle.setSelectedIndex(0);
        txt_address.setText(""); 
    }  
      
    private void your_order()
    {
        int c;
        try{    
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/dms","DMS","Dairy@123");
                String stq="select * from y_order";
                PreparedStatement pstr=conn.prepareStatement(stq);
                ResultSet rs=pstr.executeQuery();
                ResultSetMetaData rss=rs.getMetaData();
                c=rss.getColumnCount();
                DefaultTableModel dt=(DefaultTableModel)order_table.getModel();
                dt.setRowCount(0);
                while(rs.next())
                {
                    Vector v=new Vector();
                    
                    for(int a=1;a<=c;a++)
                    {
                        v.add(rs.getString("item_name"));
                        v.add(rs.getInt("rate"));
                        v.add(rs.getInt("quantity"));
                        v.add(rs.getDouble("price"));
                    }
                    dt.addRow(v);
                    
                }
               conn.close();
        }
        
        catch(ClassNotFoundException | SQLException e){
            
            JOptionPane.showMessageDialog(null,e);
        }
    }
    
    private void total_price()
    {
        Double sum=0.00;
        for (int i=0; i < order_table.getRowCount();i++)
        {
            sum=sum + Double.parseDouble(order_table.getValueAt(i,3).toString());
        }
        txt_total_price.setText(Double.toString(sum) +" /-");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel add_item_pnl;
    private javax.swing.JPanel add_item_title_pnl;
    private javax.swing.JLabel addr_lbl;
    private javax.swing.JButton bill_btn;
    private javax.swing.JTable bill_menu_table;
    private javax.swing.JPanel bill_pnl;
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_bill;
    private javax.swing.JButton btn_bill_additem;
    private javax.swing.JButton btn_bill_rmitem;
    private javax.swing.JButton btn_bill_search;
    private javax.swing.JButton btn_bill_showall;
    private javax.swing.JButton btn_bill_updateqty;
    private javax.swing.JButton btn_cancel_order;
    private javax.swing.JButton btn_clear;
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_mn_clear;
    private javax.swing.JButton btn_mn_delete;
    private javax.swing.JButton btn_mn_save;
    private javax.swing.JButton btn_mn_search;
    private javax.swing.JButton btn_mn_showall;
    private javax.swing.JButton btn_mn_update;
    private javax.swing.JPanel btn_pnl;
    private javax.swing.JButton btn_serach;
    private javax.swing.JButton btn_showall;
    private javax.swing.JButton btn_update;
    private javax.swing.JComboBox<String> combo_bill;
    private javax.swing.JComboBox<String> combo_mn;
    private javax.swing.JComboBox<String> combo_search;
    private javax.swing.JPanel dash_pnl;
    private com.toedter.calendar.JDateChooser date_from;
    private com.toedter.calendar.JDateChooser date_to;
    private javax.swing.JButton gen_report;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JRadioButton j_selectdate;
    private javax.swing.JLabel lbl_bill_name;
    private javax.swing.JLabel lbl_bill_quantity;
    private javax.swing.JLabel lbl_bill_rate;
    private javax.swing.JLabel lbl_bill_search;
    private javax.swing.JLabel lbl_contact;
    private javax.swing.JLabel lbl_cust_name;
    private javax.swing.JLabel lbl_date_from;
    private javax.swing.JLabel lbl_date_to;
    private javax.swing.JLabel lbl_gen;
    private javax.swing.JLabel lbl_id;
    private javax.swing.JLabel lbl_item_name;
    private javax.swing.JLabel lbl_item_no;
    private javax.swing.JLabel lbl_name;
    private javax.swing.JLabel lbl_price;
    private javax.swing.JLabel lbl_search;
    private javax.swing.JLabel lbl_total_price;
    private javax.swing.JButton logout_btn;
    private javax.swing.JButton menu_btn;
    private javax.swing.JPanel menu_pnl;
    private javax.swing.JTable menu_table;
    private javax.swing.JTable order_table;
    private javax.swing.JRadioButton r_day;
    private javax.swing.JRadioButton r_month;
    private javax.swing.JRadioButton r_week;
    private javax.swing.ButtonGroup rb;
    private javax.swing.JPanel reort_table;
    private javax.swing.JButton report_clear;
    private javax.swing.JPanel report_pnl;
    private javax.swing.JTable report_table;
    private javax.swing.JPanel summary_pnl;
    private javax.swing.JLabel title_lbl;
    private javax.swing.JPanel title_pnl;
    private javax.swing.JTextArea txt_address;
    private javax.swing.JTextField txt_bii_search;
    private javax.swing.JTextField txt_bill_name;
    private javax.swing.JSpinner txt_bill_quantity;
    private javax.swing.JTextField txt_bill_rate;
    private javax.swing.JComboBox<String> txt_cattle;
    private javax.swing.JTextField txt_contact;
    private javax.swing.JTextField txt_cust_contact;
    private javax.swing.JTextField txt_cust_name;
    private javax.swing.JTextField txt_id;
    private javax.swing.JTextField txt_item_name;
    private javax.swing.JTextField txt_item_no;
    private javax.swing.JTextField txt_mn_search;
    private javax.swing.JTextField txt_name;
    private javax.swing.JTextField txt_price;
    private javax.swing.JLabel txt_r_date;
    private javax.swing.JTextField txt_search;
    private javax.swing.JLabel txt_t_amt;
    private javax.swing.JLabel txt_total_bill;
    private javax.swing.JTextField txt_total_price;
    private javax.swing.JLabel vendor_title_lbl;
    private javax.swing.JButton vendors_btn;
    private javax.swing.JPanel vendors_pnl;
    private javax.swing.JTable vendors_table;
    // End of variables declaration//GEN-END:variables
}